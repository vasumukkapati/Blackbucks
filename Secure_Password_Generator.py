# -*- coding: utf-8 -*-
"""Secure_Password_Generator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CTpP5tXVabEO5bhTpxBMEFjneloLmTAR
"""

import random
import string

def generate_password(length=12, use_digits=True, use_special_chars=True):
    # Define character sets
    letters = string.ascii_letters  # Uppercase and lowercase letters
    digits = string.digits if use_digits else ""
    special_chars = string.punctuation if use_special_chars else ""

    # Combine characters based on user preferences
    all_chars = letters + digits + special_chars

    if not all_chars:
        print("Error: No character set selected.")
        return None

    # Ensure at least one of each selected type is included
    password = random.choice(letters)  # At least one letter
    if use_digits:
        password += random.choice(digits)
    if use_special_chars:
        password += random.choice(special_chars)

    # Fill the remaining characters randomly
    password += ''.join(random.choices(all_chars, k=length - len(password)))

    # Shuffle to avoid predictable patterns
    password = ''.join(random.sample(password, len(password)))

    return password

# User input for password criteria
length = int(input("Enter password length (minimum 6): "))
use_digits = input("Include digits? (y/n): ").lower() == "y"
use_special_chars = input("Include special characters? (y/n): ").lower() == "y"

# Generate and display the secure password
if length < 6:
    print("Password length should be at least 6 characters.")
else:
    secure_password = generate_password(length, use_digits, use_special_chars)
    print("Generated Secure Password:", secure_password)